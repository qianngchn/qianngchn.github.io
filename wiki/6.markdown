<!---title:获取文件CRC32值-->
<!---category:代码片段-->
<!---tags:C语言, crc32-->
<!---author:Neal-->
<!---date:2016-03-21-->

这是一段获取文件`CRC32`值的代码，与`WinRAR`内`CRC32`值相同。
````````````````````````````````````````````````````````````{.c}
#include <stdio.h>
#include <stdint.h>

#define CRC32_POLY 0xEDB88320U
static uint32_t crc32table[256];

static void crc32table_init(void) {
    uint32_t crc32;
    int i, j;

    for(i = 0; i < 256; i++) {
        crc32 = i;
        for(j = 0; j < 8; j++) {
            if(crc32 & 0x00000001U)
                crc32 = (crc32 >> 1) ^ CRC32_POLY;
            else
                crc32 = crc32 >> 1;
        }
        crc32table[i] = crc32;
    }
}

static uint32_t crc32_buff(uint32_t crc32init, uint8_t *buff, uint32_t buffsize) {
    uint32_t crc32 = crc32init ^ 0xFFFFFFFFU;
    while(buffsize--)
        crc32 = (crc32 >> 8) ^ crc32table[(crc32 & 0x000000FFU) ^ *buff++];

    return crc32 ^ 0xFFFFFFFFU;
}

uint32_t crc32_file(const char *file) {
    uint32_t size = 0x00100000U;
    uint8_t buff[size];
    uint32_t crc32 = 0;
    size_t length;

    FILE *fd = fopen(file, "r");
    if(fd == NULL) return 0;
    crc32table_init();
    while((length = fread(buff, sizeof(uint8_t), size, fd)) > 0)
        crc32 = crc32_buff(crc32, buff, length);
    fclose(fd);

    return crc32;
}

int main(int argc, char **argv) {
    if(argc != 2) {
        printf("Usage: %s file\n", basename(argv[0]));
        return 1;
    }

    uint32_t crc32 = crc32_file(argv[1]);
    printf("CRC32: %08X\n", crc32);

    return 0;
}
````````````````````````````````````````````````````````````
