<!--title:Ubuntu下全命令行搭建Android开发环境-->
<!--category:技术学习-->
<!--tags:ubuntu, android, shell-->
<!--author:Neal-->
<!--date:2016-04-16-->

下面是本文中使用的一些SDK和基本环境：

* `ubuntu server 14.04` (`64`位)
* `JDK 1.7`
* `android-sdk_r24.4.1`
* `gradle-2.12`
* `Android Studio 2.0`

进入正题，接下来一步一步介绍如何安装配置一个命令行下的编译构建系统。

### 安装 `JDK` 环境
配合`android`的`JDK`最好选用`JDK`官方版本而不是`Open JDK`,下面是在`unbuntu`下安装`JDK 1.7`的方法：

    sudo add-apt-repository ppa:webupd8team/java
    sudo apt-get update
    sudo apt-get install oracle-java7-installer

### 安装 `Android SDK`
下载地址：<http://developer.android.com/sdk/installing/studio.html>

`android sdk` 工具包的一些命令行工具是基于`32`位系统的，在`64`为平台运行`32`程序必须安装 `i386` 的一些依赖库，方法如下：

    sudo dpkg --add-architecture i386
    sudo apt-get update
    sudo apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1

安装完成`32`位的依赖库后，我们使用`wget` 去官方下载最新的`linux`下`android SDK`包。

    cd ~
    wget http://dl.google.com/android/android-sdk_r24.4.1-linux.tgz
    tar xvzf android-sdk_r24.4.1-linux.tgz

编辑 `.profile` 或者 `.bash_profile` 把下面的目录增加到 `path`的搜索路径中，确保`android SDK`的一些命令工具可以直接在终端使用，比如 `adb` 命令。

    ANDROID_HOME=$HOME/android-sdk-linux
    PATH="$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools"

使环境变量生效

    source ~/.profile

环境变量生效后，你可以使用`android`命令 列出`sdk`相关的列表，以便我们选择和自己项目匹配的`SDK`版本。(刚才只是安装了最基础的`SDK`，要完全满足你的开发环境需要还得从下面的列表中选择你需要的`SDK`和工具更新下载)

    android list sdk --all

输出如下所示：

    1- Android SDK Tools, revision 24.4.1
    2- Android SDK Platform-tools, revision 21
    3- Android SDK Build-tools, revision 21.1.2
    4- Android SDK Build-tools, revision 21.1.1
    5- Android SDK Build-tools, revision 21.1
    6- Android SDK Build-tools, revision 21.0.2
    7- Android SDK Build-tools, revision 21.0.1
    8- Android SDK Build-tools, revision 21
    9- Android SDK Build-tools, revision 20
    10- Android SDK Build-tools, revision 19.1
    11- Android SDK Build-tools, revision 19.0.3
    12- Android SDK Build-tools, revision 19.0.2
    13- Android SDK Build-tools, revision 19.0.1
    14- Android SDK Build-tools, revision 19
    15- Android SDK Build-tools, revision 18.1.1
    16- Android SDK Build-tools, revision 18.1
    17- Android SDK Build-tools, revision 18.0.1
    18- Android SDK Build-tools, revision 17
    19- Documentation for Android SDK, API 21, revision 1
    20- SDK Platform Android 5.0.1, API 21, revision 2
    21- SDK Platform Android 4.4W.2, API 20, revision 2
    22- SDK Platform Android 4.4.2, API 19, revision 4
    23- SDK Platform Android 4.3.1, API 18, revision 3
    24- SDK Platform Android 4.2.2, API 17, revision 3
    ....

这里包括不同的`Android API` 版本和不同的构建工具，选择你想要安装项目的序号，这里我想安装 `build tools 19.1` ,`build tools 21` 及 `android 4.2.2`以上的`SDK`所以选择序号 `1,2,3,20,21,22,23`

    android update sdk -u -a -t  1,2,3,10,20,21,22,23

### 安装 `Gradle`
使用`Ant`构建项目已经是过去式了，这里我们选用更加强悍和方便的构建工具`gradle`。

下载 `grdle` 二进制包

    cd ~
    wget https://services.gradle.org/distributions/gradle-2.12-bin.zip

释放到本地`Home`目录,创建名字为`gradle`的符号链接，符号连接的好处是方便版本更新，有了新的版本直接修改符号链接即可。

    unzip gradle-2.12-bin.zip 
    ln -s gradle-2.12 gradle

配置`gradle`环境变量并使其生效,编辑 `~/.profile` 文件增加下面内容

    GRADLE_HOME=$HOME/gradle
    export PATH=$PATH:$GRADLE_HOME/bin

保存后使环境变量使其生效

    source ~/.profile

环境变量生效后你可以在终端敲入`gradle`命令并运行用以检测`gradle`是否安装成功。

    gradle

如果安装配置的没有问题将会提示类似下面的信息

    :help
    Welcome to Gradle 2.12
    To run a build, run gradle <task> ...
    To see a list of available tasks, run gradle tasks
    To see a list of command-line options, run gradle --help
    BUILD SUCCESSFUL

### 编译 `Android` 应用
完成以上的环境配置，我们的一个`Android`下的基础构建环境就全部配置好了，接下来做的事情就是尝试使用`gradle` 编译一个`android` 应用出来验证我的编译环境是否`OK`,下载我写的一个`gadle demo`例子进行测试。

    git clone https://github.com/examplecode/gradle_demo
    cd gradle_demo/hello-apk-with-gradle
    gradle build

一切顺利的话，编译完成后，你会在 `hello-apk-with-gradle/build/outputs/apk` 目录下找到编译好的`apk`包。至于如何整合到你自己的项目中去，只需要仿照例子给你的项目提供一个`build.gradle`脚本即可。

### 安装 `Android Studio`
下载地址：<http://developer.android.com/sdk/installing/studio.html>

    cd ~
    wget https://dl.google.com/dl/android/studio/ide-zips/2.0.0.20/android-studio-ide-143.2739321-linux.zip

解压后执行`bin`目录中的`studio.sh`即可启动`Android Studio`。
